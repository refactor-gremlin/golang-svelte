# no 'version:' key; compose v2 ignores it and warns
volumes:
  pgdata:
  loki-data:
  grafana-data:

services:
  # Dev container that Cursor/VS Code attaches to
  app:
    build:
      context: .
      dockerfile: Dockerfile
    init: true
    volumes:
      - ..:/workspace:cached
      - /var/run/docker.sock:/var/run/docker.sock
    command: sleep infinity
    depends_on:
      - api
      - web
      - db
      - loki
      - grafana
      - jaeger

  # ASP.NET Core API (runs as your host uid:gid to keep files writable)
  api:
    build:
      context: ..
      dockerfile: MySvelteApp.Server/Dockerfile.dev
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:7216
      - ConnectionStrings__DefaultConnection=Host=db;Database=app;Username=postgres;Password=postgres
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
      - OTEL_SERVICE_NAME=my-svelteapp-api
    user: "0:0"
    volumes:
      - ../MySvelteApp.Server:/src
    # no host port publishing; VS Code forwards 7216
    depends_on:
      - db
      - jaeger

  # Svelte dev server (also run as your uid:gid)
  web:
    image: node:22-alpine
    working_dir: /app
    environment:
      - NODE_ENV=docker-dev
      - PUBLIC_API_ENDPOINT=http://api:7216
      - VITE_API_URL=http://api:7216
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4318/v1/traces
      - OTEL_SERVICE_NAME=my-sveltekit-client
    user: "0:0"
    volumes:
      - ../MySvelteApp.Client:/app
      - /app/node_modules
    command: sh -c "mkdir -p /app/node_modules && npm ci && npm run dev -- --host 0.0.0.0 --port 5173"
    # no host port publishing; VS Code forwards 5173
    depends_on:
      - api
      - jaeger

  # Postgres for local dev
  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=app
    volumes:
      - pgdata:/var/lib/postgresql/data
    # no host port publishing; VS Code forwards 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d app"]
      interval: 5s
      timeout: 3s
      retries: 20

  # Loki for app logs (not as docker logging driver)
  loki:
    image: grafana/loki:3.4.1
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/local-config.yaml:ro
      - loki-data:/loki
    ports:
      - target: 3100
        published: 3100
        protocol: tcp

  # Promtail - ships container and file logs to Loki
  promtail:
    image: grafana/promtail:3.1.1
    command: ["-config.file=/etc/promtail/config.yml"]
    volumes:
      - ./promtail/config.yml:/etc/promtail/config.yml:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ..:/workspace:ro
    depends_on:
      - loki

  # Grafana
  grafana:
    image: grafana/grafana-oss:latest
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
    ports:
      - target: 3000
        published: 3000
        protocol: tcp
    depends_on:
      - loki
      - db
      - jaeger

  jaeger:
    image: jaegertracing/all-in-one:1.57
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - target: 16686
        published: 16686
        protocol: tcp
      - target: 4318
        published: 4318
        protocol: tcp

